name: Build and Release Desktop (Windows/Linux/macOS)

on:
  push:
    branches: ["master"]
    tags:
      - "v*.*.*"
      - "*.*.*"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: desktop-release
  cancel-in-progress: false

jobs:
  build:
    name: Publish ${{ matrix.rid }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
          - os: windows-latest
            rid: win-arm64
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm64
          - os: macos-latest
            rid: osx-x64
          - os: macos-latest
            rid: osx-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Publish ${{ matrix.rid }} (Release, self-contained, single-file)
        run: >-
          dotnet publish LabelPlus_Next.Desktop/LabelPlus_Next.Desktop.csproj
          -c Release
          -r ${{ matrix.rid }}
          -p:PublishSingleFile=true
          -p:SelfContained=true
          -p:PublishTrimmed=false
          -p:EnableCompressionInSingleFile=true

      - name: Upload artifact ${{ matrix.rid }}
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ matrix.rid }}
          path: LabelPlus_Next.Desktop/bin/Release/net9.0/${{ matrix.rid }}/publish/

  release:
    name: Create GitHub Release and attach assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: false

      - name: Zip artifacts
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          cd artifacts
          for d in */; do
            rid_folder="${d%/}"               # e.g., desktop-win-x64
            rid="${rid_folder#desktop-}"      # e.g., win-x64
            out="LabelPlus_Next.Desktop-${rid}.zip"
            (cd "$rid_folder" && zip -r "../$out" .)
          done
          ls -al

      - name: Generate changelog
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          git fetch --tags --force
          mkdir -p artifacts
          CHANGELOG="artifacts/CHANGELOG.md"
          REF_TYPE="${GITHUB_REF_TYPE:-${{ github.ref_type }}}"
          REF="${GITHUB_REF:-${{ github.ref }}}"
          if [[ "$REF" == refs/tags/* ]]; then
            current_tag="${REF#refs/tags/}"
            prev_tag=$(git describe --tags --abbrev=0 "${current_tag}^" 2>/dev/null || true)
            {
              echo "# Changelog for ${current_tag}";
              echo;
              if [[ -n "$prev_tag" ]]; then
                echo "Changes since ${prev_tag}:";
                echo;
                git log --no-merges --pretty=format:'- %s (%h) by %an' "${prev_tag}..${current_tag}";
              else
                echo "Initial release ${current_tag}.";
                echo;
                git log --no-merges --pretty=format:'- %s (%h) by %an' "${current_tag}";
              fi;
              echo;
            } > "$CHANGELOG"
          else
            {
              echo "# Nightly build changelog";
              echo;
              echo "Recent changes:";
              echo;
              git log -n 100 --no-merges --pretty=format:'- %s (%h) by %an' ;
              echo;
            } > "$CHANGELOG"
          fi

      - name: Create or update prerelease (nightly)
        if: ${{ github.ref_type != 'tag' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly-${{ github.run_number }}
          name: Nightly build #${{ github.run_number }}
          prerelease: true
          body_path: artifacts/CHANGELOG.md
          files: |
            artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release for tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          # For tag pushes, action will use the tag in github.ref by default
          name: Release ${{ github.ref_name }}
          prerelease: false
          body_path: artifacts/CHANGELOG.md
          files: |
            artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
